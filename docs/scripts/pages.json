[{"name":"GREEDY()","description":"com.poemgen.mockspire.ml.GPT2StrategyEnum.GREEDY","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy-enum/-g-r-e-e-d-y/index.html","searchKeys":["GREEDY","GREEDY()","com.poemgen.mockspire.ml.GPT2StrategyEnum.GREEDY"]},{"name":"TOPK()","description":"com.poemgen.mockspire.ml.GPT2StrategyEnum.TOPK","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy-enum/-t-o-p-k/index.html","searchKeys":["TOPK","TOPK()","com.poemgen.mockspire.ml.GPT2StrategyEnum.TOPK"]},{"name":"class GPT2Client(application: Application) : AndroidViewModel","description":"com.poemgen.mockspire.ml.GPT2Client","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/index.html","searchKeys":["GPT2Client","class GPT2Client(application: Application) : AndroidViewModel","com.poemgen.mockspire.ml.GPT2Client"]},{"name":"class GPT2Tokenizer(encoder: Map<String, Int>, decoder: Map<Int, String>, bpeRanks: Map<Pair<String, String>, Int>)","description":"com.poemgen.mockspire.tokenization.GPT2Tokenizer","location":"app/com.poemgen.mockspire.tokenization/-g-p-t2-tokenizer/index.html","searchKeys":["GPT2Tokenizer","class GPT2Tokenizer(encoder: Map<String, Int>, decoder: Map<Int, String>, bpeRanks: Map<Pair<String, String>, Int>)","com.poemgen.mockspire.tokenization.GPT2Tokenizer"]},{"name":"class HelpActivity : AppCompatActivity","description":"com.poemgen.mockspire.HelpActivity","location":"app/com.poemgen.mockspire/-help-activity/index.html","searchKeys":["HelpActivity","class HelpActivity : AppCompatActivity","com.poemgen.mockspire.HelpActivity"]},{"name":"class LogDisplayActivity : AppCompatActivity","description":"com.poemgen.mockspire.LogDisplayActivity","location":"app/com.poemgen.mockspire/-log-display-activity/index.html","searchKeys":["LogDisplayActivity","class LogDisplayActivity : AppCompatActivity","com.poemgen.mockspire.LogDisplayActivity"]},{"name":"class MainActivity : AppCompatActivity","description":"com.poemgen.mockspire.MainActivity","location":"app/com.poemgen.mockspire/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : AppCompatActivity","com.poemgen.mockspire.MainActivity"]},{"name":"class Poem(title: String, content: String)","description":"com.poemgen.mockspire.poemgenerator.record.Poem","location":"app/com.poemgen.mockspire.poemgenerator.record/-poem/index.html","searchKeys":["Poem","class Poem(title: String, content: String)","com.poemgen.mockspire.poemgenerator.record.Poem"]},{"name":"class PoemLogAdapter(mPoems: MutableList<Poem>) : RecyclerView.Adapter<PoemLogAdapter.ViewHolder> ","description":"com.poemgen.mockspire.PoemLogAdapter","location":"app/com.poemgen.mockspire/-poem-log-adapter/index.html","searchKeys":["PoemLogAdapter","class PoemLogAdapter(mPoems: MutableList<Poem>) : RecyclerView.Adapter<PoemLogAdapter.ViewHolder> ","com.poemgen.mockspire.PoemLogAdapter"]},{"name":"class PoemLogListFragment : Fragment","description":"com.poemgen.mockspire.PoemLogListFragment","location":"app/com.poemgen.mockspire/-poem-log-list-fragment/index.html","searchKeys":["PoemLogListFragment","class PoemLogListFragment : Fragment","com.poemgen.mockspire.PoemLogListFragment"]},{"name":"data class GPT2Strategy(strategy: GPT2StrategyEnum, value: Int)","description":"com.poemgen.mockspire.ml.GPT2Strategy","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy/index.html","searchKeys":["GPT2Strategy","data class GPT2Strategy(strategy: GPT2StrategyEnum, value: Int)","com.poemgen.mockspire.ml.GPT2Strategy"]},{"name":"enum GPT2StrategyEnum : Enum<GPT2StrategyEnum> ","description":"com.poemgen.mockspire.ml.GPT2StrategyEnum","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy-enum/index.html","searchKeys":["GPT2StrategyEnum","enum GPT2StrategyEnum : Enum<GPT2StrategyEnum> ","com.poemgen.mockspire.ml.GPT2StrategyEnum"]},{"name":"fun GPT2Client(application: Application)","description":"com.poemgen.mockspire.ml.GPT2Client.GPT2Client","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/-g-p-t2-client.html","searchKeys":["GPT2Client","fun GPT2Client(application: Application)","com.poemgen.mockspire.ml.GPT2Client.GPT2Client"]},{"name":"fun GPT2Strategy(strategy: GPT2StrategyEnum, value: Int = 0)","description":"com.poemgen.mockspire.ml.GPT2Strategy.GPT2Strategy","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy/-g-p-t2-strategy.html","searchKeys":["GPT2Strategy","fun GPT2Strategy(strategy: GPT2StrategyEnum, value: Int = 0)","com.poemgen.mockspire.ml.GPT2Strategy.GPT2Strategy"]},{"name":"fun GPT2Tokenizer(encoder: Map<String, Int>, decoder: Map<Int, String>, bpeRanks: Map<Pair<String, String>, Int>)","description":"com.poemgen.mockspire.tokenization.GPT2Tokenizer.GPT2Tokenizer","location":"app/com.poemgen.mockspire.tokenization/-g-p-t2-tokenizer/-g-p-t2-tokenizer.html","searchKeys":["GPT2Tokenizer","fun GPT2Tokenizer(encoder: Map<String, Int>, decoder: Map<Int, String>, bpeRanks: Map<Pair<String, String>, Int>)","com.poemgen.mockspire.tokenization.GPT2Tokenizer.GPT2Tokenizer"]},{"name":"fun HelpActivity()","description":"com.poemgen.mockspire.HelpActivity.HelpActivity","location":"app/com.poemgen.mockspire/-help-activity/-help-activity.html","searchKeys":["HelpActivity","fun HelpActivity()","com.poemgen.mockspire.HelpActivity.HelpActivity"]},{"name":"fun LogDisplayActivity()","description":"com.poemgen.mockspire.LogDisplayActivity.LogDisplayActivity","location":"app/com.poemgen.mockspire/-log-display-activity/-log-display-activity.html","searchKeys":["LogDisplayActivity","fun LogDisplayActivity()","com.poemgen.mockspire.LogDisplayActivity.LogDisplayActivity"]},{"name":"fun MainActivity()","description":"com.poemgen.mockspire.MainActivity.MainActivity","location":"app/com.poemgen.mockspire/-main-activity/-main-activity.html","searchKeys":["MainActivity","fun MainActivity()","com.poemgen.mockspire.MainActivity.MainActivity"]},{"name":"fun Poem(title: String, content: String)","description":"com.poemgen.mockspire.poemgenerator.record.Poem.Poem","location":"app/com.poemgen.mockspire.poemgenerator.record/-poem/-poem.html","searchKeys":["Poem","fun Poem(title: String, content: String)","com.poemgen.mockspire.poemgenerator.record.Poem.Poem"]},{"name":"fun PoemLogAdapter(mPoems: MutableList<Poem>)","description":"com.poemgen.mockspire.PoemLogAdapter.PoemLogAdapter","location":"app/com.poemgen.mockspire/-poem-log-adapter/-poem-log-adapter.html","searchKeys":["PoemLogAdapter","fun PoemLogAdapter(mPoems: MutableList<Poem>)","com.poemgen.mockspire.PoemLogAdapter.PoemLogAdapter"]},{"name":"fun PoemLogListFragment()","description":"com.poemgen.mockspire.PoemLogListFragment.PoemLogListFragment","location":"app/com.poemgen.mockspire/-poem-log-list-fragment/-poem-log-list-fragment.html","searchKeys":["PoemLogListFragment","fun PoemLogListFragment()","com.poemgen.mockspire.PoemLogListFragment.PoemLogListFragment"]},{"name":"fun TextView.formatCompletion(prompt: String, completion: String)","description":"com.poemgen.mockspire.ml.formatCompletion","location":"app/com.poemgen.mockspire.ml/format-completion.html","searchKeys":["formatCompletion","fun TextView.formatCompletion(prompt: String, completion: String)","com.poemgen.mockspire.ml.formatCompletion"]},{"name":"fun ViewHolder(listItemView: View)","description":"com.poemgen.mockspire.PoemLogAdapter.ViewHolder.ViewHolder","location":"app/com.poemgen.mockspire/-poem-log-adapter/-view-holder/-view-holder.html","searchKeys":["ViewHolder","fun ViewHolder(listItemView: View)","com.poemgen.mockspire.PoemLogAdapter.ViewHolder.ViewHolder"]},{"name":"fun cancelGenerating()","description":"com.poemgen.mockspire.ml.GPT2Client.cancelGenerating","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/cancel-generating.html","searchKeys":["cancelGenerating","fun cancelGenerating()","com.poemgen.mockspire.ml.GPT2Client.cancelGenerating"]},{"name":"fun closeGenerator()","description":"com.poemgen.mockspire.ml.GPT2Client.closeGenerator","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/close-generator.html","searchKeys":["closeGenerator","fun closeGenerator()","com.poemgen.mockspire.ml.GPT2Client.closeGenerator"]},{"name":"fun decode(tokens: List<Int>): String","description":"com.poemgen.mockspire.tokenization.GPT2Tokenizer.decode","location":"app/com.poemgen.mockspire.tokenization/-g-p-t2-tokenizer/decode.html","searchKeys":["decode","fun decode(tokens: List<Int>): String","com.poemgen.mockspire.tokenization.GPT2Tokenizer.decode"]},{"name":"fun disableButtons()","description":"com.poemgen.mockspire.MainActivity.disableButtons","location":"app/com.poemgen.mockspire/-main-activity/disable-buttons.html","searchKeys":["disableButtons","fun disableButtons()","com.poemgen.mockspire.MainActivity.disableButtons"]},{"name":"fun enableButtons()","description":"com.poemgen.mockspire.MainActivity.enableButtons","location":"app/com.poemgen.mockspire/-main-activity/enable-buttons.html","searchKeys":["enableButtons","fun enableButtons()","com.poemgen.mockspire.MainActivity.enableButtons"]},{"name":"fun encode(text: String): MutableList<Int>","description":"com.poemgen.mockspire.tokenization.GPT2Tokenizer.encode","location":"app/com.poemgen.mockspire.tokenization/-g-p-t2-tokenizer/encode.html","searchKeys":["encode","fun encode(text: String): MutableList<Int>","com.poemgen.mockspire.tokenization.GPT2Tokenizer.encode"]},{"name":"fun getText(): String","description":"com.poemgen.mockspire.poemgenerator.record.Poem.getText","location":"app/com.poemgen.mockspire.poemgenerator.record/-poem/get-text.html","searchKeys":["getText","fun getText(): String","com.poemgen.mockspire.poemgenerator.record.Poem.getText"]},{"name":"fun getTitle(): String","description":"com.poemgen.mockspire.poemgenerator.record.Poem.getTitle","location":"app/com.poemgen.mockspire.poemgenerator.record/-poem/get-title.html","searchKeys":["getTitle","fun getTitle(): String","com.poemgen.mockspire.poemgenerator.record.Poem.getTitle"]},{"name":"fun hideKeyboard()","description":"com.poemgen.mockspire.MainActivity.hideKeyboard","location":"app/com.poemgen.mockspire/-main-activity/hide-keyboard.html","searchKeys":["hideKeyboard","fun hideKeyboard()","com.poemgen.mockspire.MainActivity.hideKeyboard"]},{"name":"fun launchAutocomplete()","description":"com.poemgen.mockspire.ml.GPT2Client.launchAutocomplete","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/launch-autocomplete.html","searchKeys":["launchAutocomplete","fun launchAutocomplete()","com.poemgen.mockspire.ml.GPT2Client.launchAutocomplete"]},{"name":"fun readPrompts(): List<String>","description":"com.poemgen.mockspire.MainActivity.readPrompts","location":"app/com.poemgen.mockspire/-main-activity/read-prompts.html","searchKeys":["readPrompts","fun readPrompts(): List<String>","com.poemgen.mockspire.MainActivity.readPrompts"]},{"name":"fun setPrompt(prompt: String)","description":"com.poemgen.mockspire.ml.GPT2Client.setPrompt","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/set-prompt.html","searchKeys":["setPrompt","fun setPrompt(prompt: String)","com.poemgen.mockspire.ml.GPT2Client.setPrompt"]},{"name":"inner class ViewHolder(listItemView: View) : RecyclerView.ViewHolder","description":"com.poemgen.mockspire.PoemLogAdapter.ViewHolder","location":"app/com.poemgen.mockspire/-poem-log-adapter/-view-holder/index.html","searchKeys":["ViewHolder","inner class ViewHolder(listItemView: View) : RecyclerView.ViewHolder","com.poemgen.mockspire.PoemLogAdapter.ViewHolder"]},{"name":"lateinit var mainActivity: MainActivity","description":"com.poemgen.mockspire.ml.GPT2Client.mainActivity","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/main-activity.html","searchKeys":["mainActivity","lateinit var mainActivity: MainActivity","com.poemgen.mockspire.ml.GPT2Client.mainActivity"]},{"name":"lateinit var randomPrompts: List<String>","description":"com.poemgen.mockspire.MainActivity.randomPrompts","location":"app/com.poemgen.mockspire/-main-activity/random-prompts.html","searchKeys":["randomPrompts","lateinit var randomPrompts: List<String>","com.poemgen.mockspire.MainActivity.randomPrompts"]},{"name":"object Garden","description":"com.poemgen.mockspire.poemgenerator.record.Garden","location":"app/com.poemgen.mockspire.poemgenerator.record/-garden/index.html","searchKeys":["Garden","object Garden","com.poemgen.mockspire.poemgenerator.record.Garden"]},{"name":"open override fun getItemCount(): Int","description":"com.poemgen.mockspire.PoemLogAdapter.getItemCount","location":"app/com.poemgen.mockspire/-poem-log-adapter/get-item-count.html","searchKeys":["getItemCount","open override fun getItemCount(): Int","com.poemgen.mockspire.PoemLogAdapter.getItemCount"]},{"name":"open override fun onBindViewHolder(holder: PoemLogAdapter.ViewHolder, position: Int)","description":"com.poemgen.mockspire.PoemLogAdapter.onBindViewHolder","location":"app/com.poemgen.mockspire/-poem-log-adapter/on-bind-view-holder.html","searchKeys":["onBindViewHolder","open override fun onBindViewHolder(holder: PoemLogAdapter.ViewHolder, position: Int)","com.poemgen.mockspire.PoemLogAdapter.onBindViewHolder"]},{"name":"open override fun onCreate(savedInstanceState: Bundle?)","description":"com.poemgen.mockspire.PoemLogListFragment.onCreate","location":"app/com.poemgen.mockspire/-poem-log-list-fragment/on-create.html","searchKeys":["onCreate","open override fun onCreate(savedInstanceState: Bundle?)","com.poemgen.mockspire.PoemLogListFragment.onCreate"]},{"name":"open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","description":"com.poemgen.mockspire.PoemLogListFragment.onCreateView","location":"app/com.poemgen.mockspire/-poem-log-list-fragment/on-create-view.html","searchKeys":["onCreateView","open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","com.poemgen.mockspire.PoemLogListFragment.onCreateView"]},{"name":"open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): PoemLogAdapter.ViewHolder","description":"com.poemgen.mockspire.PoemLogAdapter.onCreateViewHolder","location":"app/com.poemgen.mockspire/-poem-log-adapter/on-create-view-holder.html","searchKeys":["onCreateViewHolder","open override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): PoemLogAdapter.ViewHolder","com.poemgen.mockspire.PoemLogAdapter.onCreateViewHolder"]},{"name":"open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","description":"com.poemgen.mockspire.PoemLogListFragment.onViewCreated","location":"app/com.poemgen.mockspire/-poem-log-list-fragment/on-view-created.html","searchKeys":["onViewCreated","open override fun onViewCreated(view: View, savedInstanceState: Bundle?)","com.poemgen.mockspire.PoemLogListFragment.onViewCreated"]},{"name":"val completion: LiveData<String>","description":"com.poemgen.mockspire.ml.GPT2Client.completion","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/completion.html","searchKeys":["completion","val completion: LiveData<String>","com.poemgen.mockspire.ml.GPT2Client.completion"]},{"name":"val contentTextView: TextView","description":"com.poemgen.mockspire.PoemLogAdapter.ViewHolder.contentTextView","location":"app/com.poemgen.mockspire/-poem-log-adapter/-view-holder/content-text-view.html","searchKeys":["contentTextView","val contentTextView: TextView","com.poemgen.mockspire.PoemLogAdapter.ViewHolder.contentTextView"]},{"name":"val name: String","description":"com.poemgen.mockspire.ml.GPT2StrategyEnum.GREEDY.name","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy-enum/-g-r-e-e-d-y/name.html","searchKeys":["name","val name: String","com.poemgen.mockspire.ml.GPT2StrategyEnum.GREEDY.name"]},{"name":"val name: String","description":"com.poemgen.mockspire.ml.GPT2StrategyEnum.TOPK.name","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy-enum/-t-o-p-k/name.html","searchKeys":["name","val name: String","com.poemgen.mockspire.ml.GPT2StrategyEnum.TOPK.name"]},{"name":"val ordinal: Int","description":"com.poemgen.mockspire.ml.GPT2StrategyEnum.GREEDY.ordinal","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy-enum/-g-r-e-e-d-y/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.poemgen.mockspire.ml.GPT2StrategyEnum.GREEDY.ordinal"]},{"name":"val ordinal: Int","description":"com.poemgen.mockspire.ml.GPT2StrategyEnum.TOPK.ordinal","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy-enum/-t-o-p-k/ordinal.html","searchKeys":["ordinal","val ordinal: Int","com.poemgen.mockspire.ml.GPT2StrategyEnum.TOPK.ordinal"]},{"name":"val prompt: LiveData<String>","description":"com.poemgen.mockspire.ml.GPT2Client.prompt","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/prompt.html","searchKeys":["prompt","val prompt: LiveData<String>","com.poemgen.mockspire.ml.GPT2Client.prompt"]},{"name":"val ready: LiveData<Boolean>","description":"com.poemgen.mockspire.MainActivity.ready","location":"app/com.poemgen.mockspire/-main-activity/ready.html","searchKeys":["ready","val ready: LiveData<Boolean>","com.poemgen.mockspire.MainActivity.ready"]},{"name":"val strategy: GPT2StrategyEnum","description":"com.poemgen.mockspire.ml.GPT2Strategy.strategy","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy/strategy.html","searchKeys":["strategy","val strategy: GPT2StrategyEnum","com.poemgen.mockspire.ml.GPT2Strategy.strategy"]},{"name":"val titleTextView: TextView","description":"com.poemgen.mockspire.PoemLogAdapter.ViewHolder.titleTextView","location":"app/com.poemgen.mockspire/-poem-log-adapter/-view-holder/title-text-view.html","searchKeys":["titleTextView","val titleTextView: TextView","com.poemgen.mockspire.PoemLogAdapter.ViewHolder.titleTextView"]},{"name":"val value: Int = 0","description":"com.poemgen.mockspire.ml.GPT2Strategy.value","location":"app/com.poemgen.mockspire.ml/-g-p-t2-strategy/value.html","searchKeys":["value","val value: Int = 0","com.poemgen.mockspire.ml.GPT2Strategy.value"]},{"name":"var seeds: MutableList<Poem>","description":"com.poemgen.mockspire.poemgenerator.record.Garden.seeds","location":"app/com.poemgen.mockspire.poemgenerator.record/-garden/seeds.html","searchKeys":["seeds","var seeds: MutableList<Poem>","com.poemgen.mockspire.poemgenerator.record.Garden.seeds"]},{"name":"var strategy: GPT2Strategy","description":"com.poemgen.mockspire.ml.GPT2Client.strategy","location":"app/com.poemgen.mockspire.ml/-g-p-t2-client/strategy.html","searchKeys":["strategy","var strategy: GPT2Strategy","com.poemgen.mockspire.ml.GPT2Client.strategy"]}]
